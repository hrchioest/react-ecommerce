{"version":3,"sources":["CartContext.js","components/cart/CartIcon.jsx","components/navbar/Style.js","firebase/index.js","components/navbar/Navbar.jsx","components/item/Item.jsx","components/itemList/ItemList.jsx","components/itemListContainer/ItemListContainer.jsx","components/home/Home.jsx","components/formulario/Formulario.jsx","utils.js","components/cart/Cart.jsx","components/itemCount/ItemCount.jsx","components/itemDetail/ItemDetail.jsx","components/itemDetailContainer/ItemDetailContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["CartContex","React","createContext","CartIcon","cantTotal","useContext","CartContext","IconButton","Badge","badgeContent","color","showZero","style","makeStyles","theme","root","flexGrow","title","padding","height","formControl","margin","spacing","minWidth","cat","textDecoration","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","Navbar","push","useHistory","classes","useStyles","useState","categories","setCategories","useEffect","collection","get","then","querySnapshot","size","console","log","docs","map","doc","data","id","catch","error","pathname","useLocation","split","slice","pop","detectCurrentCategory","currentCategory","setCurrentCategory","className","AppBar","position","Toolbar","Typography","variant","to","src","FormControl","InputLabel","Select","labelId","value","onChange","target","MenuItem","category","key","name","Item","item","description","img","Box","flexDirection","alt","width","ItemList","list","display","justifyContent","flexWrap","product","ItemListContainer","setList","categoryId","useParams","db","where","Home","Formulario","createOrder","email","emailConfirmation","phone","form","setForm","handleChange","event","state","disabled","length","noValidate","autoComplete","fullWidth","TextField","required","label","Value","placeholder","multiline","p","Button","onClick","convertToMoney","number","Intl","NumberFormat","currency","format","Cart","cartItem","costoTotal","showForm","setShowForm","orderId","setOrderId","Alert","severity","buyer","a","orders","newOrder","date","FieldValue","serverTimestamp","total","add","itemsToUpdate","FieldPath","documentId","i","query","batch","outOfStock","forEach","docSnapshot","idx","stock","count","update","ref","commit","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","price","ItemCount","min","max","setCount","border","borderRadius","fontSize","Icon","ItemDetail","productsAdd","bgcolor","m","ItemDetailContainer","loading","setLoading","setItem","productId","CircularProgress","App","setCartItem","Provider","itemCount","find","newCartItem","cost","reduce","acumulador","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.049b326d.chunk.js","sourcesContent":["import React from 'react'; \n\nconst CartContex = React.createContext();\n\nexport default CartContex;","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport CartContext from '../../CartContext';\n\n\nconst CartIcon = () =>{\n\n    \n    const { cantTotal } = React.useContext(CartContext);\n    \n   \n    return(\n        <>\n                <IconButton >\n                    <Badge badgeContent={cantTotal()}  color=\"secondary\" showZero>\n                        <ShoppingCartIcon />\n                    </Badge>\n                </IconButton>\n        </>\n\n        \n    );  \n}\n\nexport default CartIcon;\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst style = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n        padding: '7px',\n        height: '43px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 180,\n    },\n    cat: {\n        color: 'black',\n        textDecoration: 'none',\n    },\n}))\n\nexport default style\n","import * as firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_API_KEY_FIREBASE,\n    authDomain: 'react-ecommerce-740c2.firebaseapp.com',\n    databaseURL: 'https://react-ecommerce-740c2.firebaseio.com',\n    projectId: 'react-ecommerce-740c2',\n    storageBucket: 'react-ecommerce-740c2.appspot.com',\n    messagingSenderId: '381973464289',\n    appId: '1:381973464289:web:fc3a2065c6796f9ec823a0',\n    measurementId: 'G-GPGYL05WW9',\n})\n\nexport function getFirebase() {\n    return app\n}\nexport function getFirestore() {\n    return firebase.firestore(app)\n}\n","import React, { useState, useEffect } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport CartIcon from '../cart/CartIcon'\nimport useStyles from './Style'\nimport { useLocation, NavLink, useHistory } from 'react-router-dom'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport { getFirestore } from '../../firebase'\n\n// const categories = [\n//     { name: 'Notebooks', id: 'notebooks' },\n//     { name: 'Audio', id: 'audio' },\n//     { name: 'Smartwatches', id: 'smartwatches' },\n// ]\n\nconst detectCurrentCategory = (pathname) => {\n    return pathname.split('/').slice(-1).pop()\n}\n\nconst Navbar = () => {\n    const { push } = useHistory()\n    const classes = useStyles()\n\n    // conectando categories con firebase:\n    const [categories, setCategories] = useState([])\n\n    useEffect(() => {\n        const db = getFirestore()\n        const itemCollection = db.collection('categories')\n        itemCollection\n            .get()\n            .then((querySnapshot) => {\n                if (querySnapshot.size === 0) {\n                    console.log('no results')\n                }\n                setCategories(\n                    querySnapshot.docs.map((doc) => ({\n                        ...doc.data(),\n                        id: doc.id,\n                    }))\n                )\n            })\n            .catch((error) => {\n                console.log('Error searching categories', error)\n            })\n    }, [])\n\n    console.log(categories)\n    const { pathname } = useLocation()\n\n    const [currentCategory, setCurrentCategory] = React.useState(\n        pathname === '/' || pathname === '/cart'\n            ? 'none'\n            : detectCurrentCategory(pathname)\n    )\n\n    useEffect(() => {\n        if (pathname === '/') {\n            setCurrentCategory('none')\n        }\n    }, [pathname])\n\n    const handleChange = ({ target: { value } }) => {\n        setCurrentCategory(value)\n        push(value === 'none' ? '/' : `/categories/${value}`)\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <NavLink to=\"/\">\n                            <img\n                                className={classes.title}\n                                src=\"https://d26lpennugtm8s.cloudfront.net/stores/001/063/033/themes/common/logo-1421680389-1571774718-1624cbbd901c2cf55aa291fb448a8c991571774719.png?\"\n                            />\n                        </NavLink>\n                    </Typography>\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\n                            Categories\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-controlled-open-select-outlined\"\n                            id=\"demo-controlled-open-outlined\"\n                            value={currentCategory}\n                            onChange={handleChange}\n                        >\n                            <MenuItem value=\"none\">None</MenuItem>\n                            {categories.map((category) => (\n                                <MenuItem\n                                    key={category.id}\n                                    value={category.key}\n                                >\n                                    {category.name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n\n                    <NavLink to=\"/cart\">\n                        <CartIcon />\n                    </NavLink>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport { Link } from 'react-router-dom'\n\nconst Item = ({ item: { id, name, description, img } }) => (\n    <Box flexDirection=\"colum\">\n        <h2>{name}</h2>\n        <Link to={`/item/${id}`}>\n            <img src={img} alt=\"img\" width=\"350\" />\n        </Link>\n        <p>{description}</p>\n    </Box>\n)\n\nexport default Item\n","import React from \"react\";\nimport Box from '@material-ui/core/Box';\nimport Item from \"../item/Item\";\n\nconst ItemList =({list}) => {\n    return(\n        <Box display=\"flex\" justifyContent=\"space-around\" flexWrap=\"wrap\">\n            {list.map(product => \n                <Item key={product.id} item={product} \n                />\n                \n            )}\n        </Box>\n    )\n}\n\nexport default ItemList;","import React, {useState, useEffect} from 'react';\nimport { useParams } from \"react-router-dom\";\nimport ItemList from '../itemList/ItemList';\nimport { getFirestore } from \"../../firebase\";\n\n\nconst ItemListContainer = () =>{\n    \n    const [list, setList] = useState([]);\n    const {categoryId} = useParams();\n\n   \n    useEffect(() => {\n\n        const db = getFirestore();\n\n        let docRef;\n        \n        if(categoryId){\n            docRef = db.collection('items').where('categoryId', '==', categoryId);\n        }else{\n            docRef = db.collection('items');\n        }\n\n        docRef.get().then((querySnapshot) => { \n            if(querySnapshot.size === 0){\n                console.log('No existen resultados');\n            }\n            setList(querySnapshot.docs.map(doc => ({...doc.data(), id: doc.id}))); \n        });\n\n\n    }, [categoryId])\n    return(\n       \n        <ItemList list={list} />\n    )\n}\n\nexport default ItemListContainer;","import React from 'react'\nimport ItemListContainer from '../itemListContainer/ItemListContainer'\n\nconst Home = () => {\n    return (\n        <>\n            <ItemListContainer />\n        </>\n    )\n}\nexport default Home\n","import React, { useState, useMemo } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { Box } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst Formulario = ({ createOrder }) => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& .MuiTextField-root': {\n                margin: theme.spacing(1),\n                width: '36ch',\n            },\n        },\n    }))\n    const [form, setForm] = useState({\n        name: '',\n        email: '',\n        emailConfirmation: '',\n        phone: '',\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setForm((state) => {\n            return { ...state, [name]: value }\n        })\n    }\n\n    const handleOnclick = () => {\n        const { name, email, phone } = form\n        createOrder({ name, email, phone })\n    }\n\n    const classes = useStyles()\n\n    const disabled = !(\n        form.email.length &&\n        form.name.length &&\n        form.emailConfirmation.length &&\n        form.phone.length > 0 &&\n        form.email === form.emailConfirmation\n    )\n\n    return (\n        <>\n            <Box display=\"flex\" justifyContent=\"center\">\n                <form\n                    className={classes.root}\n                    noValidate\n                    autoComplete=\"off\"\n                    fullWidth={true}\n                >\n                    <Box>\n                        <TextField\n                            required\n                            label=\"Nombre y Apellido\"\n                            Value={form.name}\n                            placeholder=\"Nombre y Apellido\"\n                            multiline\n                            name=\"name\"\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                        <TextField\n                            required\n                            label=\"Email\"\n                            Value={form.email}\n                            placeholder=\"Email\"\n                            multiline\n                            name=\"email\"\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Box>\n                    <Box>\n                        <TextField\n                            required\n                            label=\"Repetir email\"\n                            Value={form.emailConfirmation}\n                            placeholder=\"Confirma tu email\"\n                            multiline\n                            name=\"emailConfirmation\"\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                        <TextField\n                            required\n                            label=\"Teléfono de contacto\"\n                            Value={form.phone}\n                            placeholder=\"Teléfono de contacto\"\n                            multiline\n                            name=\"phone\"\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Box>\n                </form>\n            </Box>\n\n            <Box display=\"flex\" justifyContent=\" flex-end\" p={1}>\n                <Button\n                    disabled={disabled}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={handleOnclick}\n                >\n                    Finalizar compra\n                </Button>\n            </Box>\n        </>\n    )\n}\n\nexport default Formulario\n","export const convertToMoney = (number) =>\n    Intl.NumberFormat('es-AR', {\n        style: 'currency',\n        currency: 'ARS',\n    }).format(number)\n","import React, { useState } from 'react'\n\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    Button,\n    Box,\n} from '@material-ui/core'\n\nimport Formulario from '../formulario/Formulario'\nimport CartContext from '../../CartContext'\nimport Alert from '@material-ui/lab/Alert'\nimport * as firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { getFirestore } from '../../firebase'\nimport { convertToMoney } from '../../utils'\n\nconst Cart = () => {\n    const { cartItem, costoTotal, cantTotal } = React.useContext(CartContext)\n\n    const [showForm, setShowForm] = useState(false)\n    const [orderId, setOrderId] = useState(null)\n\n    if (cartItem.length === 0) {\n        return (\n            <Alert severity=\"warning\">\n                ¡No se tiene productos seleccionados!\n            </Alert>\n        )\n    }\n\n    const handleCheckout = () => {\n        setShowForm(true)\n    }\n\n    async function createOrder(buyer) {\n        const db = getFirestore()\n\n        const orders = db.collection('orders')\n        const newOrder = {\n            buyer,\n            cartItem,\n            date: firebase.firestore.FieldValue.serverTimestamp(),\n            total: costoTotal(),\n        }\n        try {\n            const { id } = await orders.add(newOrder)\n            setOrderId(id)\n        } catch (err) {\n            console.log('Error')\n        }\n\n        const itemsToUpdate = db.collection('items').where(\n            firebase.firestore.FieldPath.documentId(),\n            'in',\n            cartItem.map((i) => i.id)\n        )\n        const query = await itemsToUpdate.get()\n        const batch = db.batch()\n\n        const outOfStock = []\n        query.docs.forEach((docSnapshot, idx) => {\n            if (docSnapshot.data().stock >= cartItem[idx].count) {\n                batch.update(docSnapshot.ref, {\n                    stock: docSnapshot.data().stock - cartItem[idx].count,\n                })\n            } else {\n                outOfStock.push({ ...docSnapshot.data(), id: docSnapshot.id })\n            }\n        })\n        if (outOfStock.length === 0) {\n            await batch.commit()\n        }\n    }\n\n    if (orderId) {\n        return (\n            <Alert severity=\"success\">Tu orden de compra es: {orderId}</Alert>\n        )\n    }\n\n    return (\n        <>\n            <TableContainer component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Producto</TableCell>\n                            <TableCell>Nombre</TableCell>\n                            <TableCell align=\"right\">Cantidad</TableCell>\n                            <TableCell align=\"right\">precio</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {cartItem.map((item) => (\n                            <TableRow key={item.id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <img\n                                        src={item.img}\n                                        alt=\"img\"\n                                        style={{ width: '82px' }}\n                                    />\n                                </TableCell>\n                                <TableCell>{item.name}</TableCell>\n                                <TableCell align=\"right\">\n                                    {item.count}\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    {convertToMoney(item.price)}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <Box display=\"flex\" justifyContent=\"flex-end\" p={1}>\n                    Costo total: {costoTotal()}\n                </Box>\n            </TableContainer>\n\n            <Box display=\"flex\" justifyContent=\" flex-end\" p={1}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleCheckout}\n                >\n                    checkout\n                </Button>\n            </Box>\n\n            {showForm ? <Formulario createOrder={createOrder} /> : null}\n        </>\n    )\n}\n\nexport default Cart\n","import React from 'react'\nimport Icon from '@material-ui/core/Icon'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\nimport Box from '@material-ui/core/Box'\n\nconst ItemCount = ({ min, max, count, setCount }) => {\n    const add = () => {\n        if (count < max) setCount(count + 1)\n    }\n\n    const subtract = () => {\n        if (count > min) setCount(count - 1)\n    }\n\n    return (\n        <Box flexDirection=\"colum\" width=\"185px\" height=\"100px\">\n            <Box\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                border=\"solid 1px black\"\n                borderRadius=\"8px\"\n            >\n                <RemoveCircleIcon\n                    style={{ fontSize: 30 }}\n                    onClick={subtract}\n                ></RemoveCircleIcon>\n                <span>{count}</span>\n                <Icon\n                    style={{ fontSize: 30 }}\n                    disabled={count === max}\n                    onClick={add}\n                >\n                    add_circle\n                </Icon>\n            </Box>\n        </Box>\n    )\n}\n\nexport default ItemCount\n","import React from 'react'\nimport ItemCount from '../itemCount/ItemCount'\nimport Item from '../item/Item'\nimport { Button } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\n\nimport CartContext from '../../CartContext'\n\nconst ItemDetail = ({ item }) => {\n    const [count, setCount] = React.useState(1)\n    const { productsAdd } = React.useContext(CartContext)\n\n    const handleClickComprar = () => {\n        if (count > 0) {\n            productsAdd({\n                id: item.id,\n                name: item.name,\n                img: item.img,\n                count,\n                price: item.price,\n            })\n        }\n    }\n\n    return (\n        <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            margin=\"auto\"\n            flexWrap=\"wrap\"\n            bgcolor=\"grey.300\"\n            m={2}\n        >\n            <Item item={item} />\n            <Box margin={10}>\n                <ItemCount setCount={setCount} count={count} min={1} max={30} />\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    fullWidth\n                    onClick={handleClickComprar}\n                >\n                    Comprar\n                </Button>\n                <p>Precio: $ {Intl.NumberFormat().format(item.price)}</p>\n                <p>Stock disponible: {item.stock}</p>\n            </Box>\n        </Box>\n    )\n}\n\nexport default ItemDetail\n","import React, {useState, useEffect} from 'react';\nimport { useParams } from \"react-router-dom\";\n// import listProducts from '../../listProducts';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ItemDetail from '../itemDetail/ItemDetail' ;\nimport { getFirestore } from \"../../firebase\";\n\n//listado de productos cuando que se trae desde una promesa:\n\n// const itemDetails = (productId) => {\n//     return new Promise(result =>  setTimeout(() => \n//         { result(listProducts.find(product =>\n//             product.id===parseInt(productId)))  \n//         },3000)) \n// } \n\n//listado de los productos traidos de firebase:     \nconst ItemDetailContainer = () =>{\n\n    const [loading, setLoading] = useState(false);\n   \n    const [item, setItem] = useState([]);\n    const {productId} = useParams();\n    \n    useEffect(() =>{\n        const db = getFirestore();\n        const docRef = db.collection('items').doc(productId);\n\n        docRef.get().then((querySnapshot) => { \n\n            setLoading(false);\n            setItem({ id:querySnapshot.id, ...querySnapshot.data() });  \n        });\n\n    }, [productId])\n    \n    return(\n        <>\n            {loading ? <CircularProgress color=\"secondary\" />\n            : <ItemDetail item={item} />\n\n            }\n        </>\n    )   \n}\n\nexport default ItemDetailContainer;","import React, { useState } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/navbar/Navbar'\nimport Home from './components/home/Home'\nimport Cart from './components/cart/Cart'\nimport ItemDetailContainer from './components/itemDetailContainer/ItemDetailContainer'\nimport CartContext from './CartContext'\nimport { convertToMoney } from './utils'\n\nfunction App() {\n    const [cartItem, setCartItem] = useState([])\n\n    const productsAdd = (itemCount) => {\n        if (cartItem.find((item) => item.id === itemCount.id)) {\n            const newCartItem = cartItem.map((item) => {\n                if (item.id === itemCount.id) {\n                    return { ...item, count: itemCount.count + item.count }\n                }\n                return item\n            })\n            setCartItem(newCartItem)\n        } else {\n            setCartItem((state) => {\n                return [...state, itemCount]\n            })\n        }\n    }\n\n    const costoTotal = () => {\n        const cost = cartItem.reduce(\n            (acumulador, item) => acumulador + item.price * item.count,\n            0\n        )\n        return convertToMoney(cost)\n    }\n    const cantTotal = () => {\n        return cartItem.reduce((acumulador, item) => acumulador + item.count, 0)\n    }\n\n    return (\n        <CartContext.Provider\n            value={{ cartItem, productsAdd, costoTotal, cantTotal }}\n        >\n            <BrowserRouter>\n                <Navbar />\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home />\n                    </Route>\n                    <Route path=\"/categories/:categoryId\">\n                        <Home />\n                    </Route>\n                    <Route exact path=\"/cart\">\n                        <Cart />\n                    </Route>\n                    <Route exact path=\"/item/:productId\">\n                        <ItemDetailContainer />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </CartContext.Provider>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}